// Code generated by ent, DO NOT EDIT.

package orderitem

const (
	// Label holds the string label denoting the orderitem type in the database.
	Label = "order_item"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldPricePerUnit holds the string denoting the price_per_unit field in the database.
	FieldPricePerUnit = "price_per_unit"
	// FieldQuantity holds the string denoting the quantity field in the database.
	FieldQuantity = "quantity"
	// FieldProduct holds the string denoting the product field in the database.
	FieldProduct = "product"
	// EdgeOrder holds the string denoting the order edge name in mutations.
	EdgeOrder = "order"
	// EdgeDeliveries holds the string denoting the deliveries edge name in mutations.
	EdgeDeliveries = "deliveries"
	// Table holds the table name of the orderitem in the database.
	Table = "order_items"
	// OrderTable is the table that holds the order relation/edge.
	OrderTable = "order_items"
	// OrderInverseTable is the table name for the Order entity.
	// It exists in this package in order to avoid circular dependency with the "order" package.
	OrderInverseTable = "orders"
	// OrderColumn is the table column denoting the order relation/edge.
	OrderColumn = "order_order_items"
	// DeliveriesTable is the table that holds the deliveries relation/edge.
	DeliveriesTable = "deliveries"
	// DeliveriesInverseTable is the table name for the Delivery entity.
	// It exists in this package in order to avoid circular dependency with the "delivery" package.
	DeliveriesInverseTable = "deliveries"
	// DeliveriesColumn is the table column denoting the deliveries relation/edge.
	DeliveriesColumn = "order_item_deliveries"
)

// Columns holds all SQL columns for orderitem fields.
var Columns = []string{
	FieldID,
	FieldPricePerUnit,
	FieldQuantity,
	FieldProduct,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "order_items"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"order_order_items",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}
